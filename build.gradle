plugins {
    id 'java'
    id 'idea'
    id 'org.gradle.java.experimental-jigsaw' version '0.1.1'
    id 'org.springframework.boot' version '2.1.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.6.RELEASE'
}

group 'pickjob'
version '0.0.1'
javaModule.name = 'pickjob.spring.starter'
ext.mainClassName = 'app.Application'

configurations {
    implementation {
        exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }
}

dependencies {

    implementation 'org.springframework:spring-context-support'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'

    implementation 'com.lmax:disruptor:3.4.2'
    implementation 'mysql:mysql-connector-java:8.0.15'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2'
    implementation 'com.baomidou:mybatis-plus-boot-starter:3.1.1'

    compileOnly 'org.projectlombok:lombok:1.18.8'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'
}

repositories {
    maven {
        url "https://maven.aliyun.com/repository/central"
    }
}
/*
 *  Plugin: java配置
 */
compileJava {
    sourceCompatibility = 12
    targetCompatibility = 12
    options.encoding = 'UTF-8'
}
compileTestJava {
    sourceCompatibility = 12
    targetCompatibility = 12
    options.encoding = 'UTF-8'
}
processResources {
    destinationDir = sourceSets.main.java.outputDir
}
processTestResources {
    destinationDir = sourceSets.test.java.outputDir
}
/*
 *  Plugin: idea 配置
 */
idea {
    module {
        downloadJavadoc = true
        downloadSources = true
        inheritOutputDirs = false
        outputDir = sourceSets.main.java.outputDir
        testOutputDir = sourceSets.test.java.outputDir
    }
}
/*
 *  Plugin: Spring Boot 配置
 */
bootRun {
    main = "${mainClassName}"
}
bootJar {
    mainClassName = "${mainClassName}"
}